steps:
  - id: "lint"
    label: "lint"
    commands:
      - yarn install --frozen-lockfile
      - yarn workspaces run lint
  - id: "compile"
    label: "compile"
    commands:
      - yarn install --frozen-lockfile
      - yarn workspaces run compile
  - id: "terraform"
    label: "apply terraform"
    commands:
      - bash scripts/decrypt.sh
      - bash scripts/apply_terraform.sh
    concurrency: 1
    concurrency_group: "terraform"
    artifact_paths:
      - "infra/outputs.json"
      - "infra/terraform.tfstate"
  - wait:
  - id: "migrate"
    label: ":rocket: migrate to sls"
    commands:
      - buildkite-agent artifact download 'infra/outputs.json' infra/ --step 'apply terraform'
      - bash scripts/decrypt.sh
      - yarn install --frozen-lockfile
      - cd packages/backend && yarn migrate && cd ../../
    concurrency: 1
    concurrency_group: "migrate"
  - wait:
  - id: "deploy_api"
    label: ":rocket: deploy api to sls"
    commands:
      - buildkite-agent artifact download 'infra/outputs.json' infra/ --step 'apply terraform'
      - bash scripts/decrypt.sh
      - yarn install --frozen-lockfile
      - cd packages/backend && yarn deploy && cd ../../
    concurrency: 1
    concurrency_group: "deploy_api"
    artifact_paths:
      - ".serverless/**/*"
  - id: "deploy_frontend"
    label: ":rocket: deploy frontend to sls"
    commands:
      - buildkite-agent artifact download 'infra/outputs.json' infra/ --step 'apply terraform'
      - bash scripts/decrypt.sh
      - yarn install --frozen-lockfile
      - cd packages/backend && yarn build && yarn deploy && cd ../../
    concurrency: 1
    concurrency_group: "deploy_frontend"
    artifact_paths:
      - ".serverless/**/*"
  - wait:
  - id: "latency_check"
    label: "run latency check"
    command: bash scripts/latency.sh
    artifact_paths:
      - "latency.png"

